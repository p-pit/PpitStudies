<?php //echo $this->partial('/partials/search-scripts-v2') ?>
<?php echo $this->partial('/ppit-studies/view-controller/note-scripts') ?>
<?php echo $this->partial('/ppit-studies/note/evaluation-scripts') ?>

<script>

var criterion = 'n_fn', dir = 'ASC';

function getSearch()
{
  var xhttp = new XMLHttpRequest();
  xhttp.open("GET", '<?php echo $this->url('noteLink/search', ['category' => $category, 'type' => $type]) ?>', false);
  xhttp.onreadystatechange = function() {
    if (xhttp.status == 401) location.href = '<?php echo $this->url('user/expired')?>';
    if (xhttp.readyState == 4 && xhttp.status == 200) {
      $('#search_panel').html(xhttp.responseText);

      let refresh = function () {
        $('#refresh-button').removeClass('btn-warning').addClass('btn-default');
        $('#refresh-button').attr('disabled', 'disabled');
        getNoteLinkList(getSearchParams(''));
      }

      // Trigger the Entry key event that refreshes the list
      $(document).keyup(function(e) {    
      if (e.keyCode == 13) {
         refresh();
      }
    });
        
    // Connect the refresh button that refreshes the list
    $('#refresh-button').click(refresh);
          
    // Connect the erase button that reset all the search engine inputs and checks and refresh the list
    $('#erase-button').click(function() {
      $('.search_input').val('');
      $('.search_selectpicker').selectpicker('refresh');
      $('.search_check_value').val('0');
      $('.search_check').removeClass('btn-secondary').addClass('btn-default').removeClass('active');
      $('#refresh-button').removeClass('btn-warning').addClass('btn-default');
      $('#erase-button').removeClass('btn-success').addClass('btn-default');
      $('#erase-button').attr('disabled', 'disabled');
        getNoteLinkList(getSearchParams(''));
      });
       
      $('.search_selectpicker').selectpicker('refresh');
            
      // Connect the date picker on date inputs
      $('.search_input_date').datepicker();
            
      // Trigger the change event on date inputs and refresh the list
      $('.search_input_date').change(function () {
        let propertyId = $(this).attr('id').split('-')[1];
        $('#refresh-button').removeClass('btn-default').addClass('btn-warning');
        $('#refresh-button').attr('disabled', false);
        $('#erase-button').removeClass('btn-default').addClass('btn-success');
        $('#erase-button').attr('disabled', false);
        $('#search_check-' + propertyId).removeClass('btn-default').addClass('btn-secondary').addClass('active');
        $('#search_check_value-' + propertyId).val('1');
      }); 
       
      // Trigger the change event on search inputs and refresh the list
      $('.search_input_select').change(function () {
        var propertyIdAttr = $(this).attr('id');
        if (propertyIdAttr) {
          let propertyId = propertyIdAttr.split('-')[1];
          $('#refresh-button').removeClass('btn-default').addClass('btn-warning');
          $('#refresh-button').attr('disabled', false);
          $('#erase-button').removeClass('btn-default').addClass('btn-success');
          $('#erase-button').attr('disabled', false);
          $('#search_check-' + propertyId).removeClass('btn-default').addClass('btn-secondary').addClass('active');
          $('#search_check_value-' + propertyId).val('1');
        }
      }); 

      // Trigger the keyup event on search inputs and refresh the list
      $('.search_input').keyup(function () {
        if ($(this).val().length > 2) {
          let propertyId = $(this).attr('id').split('-')[1];
          $('#refresh-button').removeClass('btn-default').addClass('btn-warning');
          $('#refresh-button').attr('disabled', false);
          $('#erase-button').removeClass('btn-default').addClass('btn-success');
          $('#erase-button').attr('disabled', false);
          $('#search_check-' + propertyId).removeClass('btn-default').addClass('btn-secondary').addClass('active');
          $('#search_check_value-' + propertyId).val('1');
        }
      });

      // Trigger the click event on per-property checks (allowing to search on empty values) and refresh the list
      $('.search_check_value').click(function() {
        $('#refresh-button').removeClass('btn-default').addClass('btn-warning');
        $('#refresh-button').attr('disabled', false);
        $('#erase-button').removeClass('btn-default').addClass('btn-success');
        $('#erase-button').attr('disabled', false);
        var propertyId = $(this).attr('id').split('-')[1], check = 'search_check_value-' + propertyId;
        if ($('#' + check).val() == '1') {
          $(this).removeClass('btn-secondary').addClass('btn-default').removeClass('active');
          $('#' + check).val('0');
          $('#search-' + propertyId).val('');
          $('#search_min-' + propertyId).val('');
          $('#search_max-' + propertyId).val('');
          $('#search-' + propertyId).selectpicker('refresh');
        }
        else {
          $(this).removeClass('btn-default').addClass('btn-secondary').addClass('active');
          $('#' + check).val('1');
        }
      });

      getNoteLinkList(getSearchParams(''));
    }
  }
  xhttp.send();
}

// Export the list
function exportNoteLinkList() {
  <?php $route = $context->getConfig('note_link/routes')['export'] ?>
	var params = getSearchParams('');
	document.location.href = '<?php echo $this->url($route, array('category' => 'evaluation', 'type' => $type)) ?>' + params + '&major=' + criterion + ((dir =='ASC') ? '&dir=ASC' : '&dir=DESC');
}

function updateGroup(ids) {    
  let route = '<?php echo $this->url('noteLink/group', ['category' => $category, 'type' => $type]) ?>' + '?id=' + ids;
  let xhttp = new XMLHttpRequest(), formData = new FormData();
  if ($('#noteLinkCheck-group_id').prop('checked')) {
      formData.append('group_id_checked', 1);
      formData.append('group_id', $('#noteLinkGroup-group_id').val());
    }
  if ($('#noteLinkCheck-teacher_id').prop('checked')) {
    formData.append('teacher_id_checked', 1);
    formData.append('teacher_id', $('#noteLinkGroup-teacher_id').val());
  }
  if ($('#noteLinkCheck-evaluation').prop('checked')) {
    formData.append('evaluation_checked', 1);
    formData.append('evaluation', $('#noteLinkGroup-evaluation').val());
  }
  xhttp.open("POST", route, true);
  xhttp.onreadystatechange = function() {
    if (xhttp.status == 401) location.href = '<?php echo $this->url('user/expired')?>';
    if (xhttp.readyState == 4 && xhttp.status == 200) {
      $('#note-update-panel').html(xhttp.responseText);
    }
  };
  xhttp.send(formData);
}

function deleteGroup(ids) {    
  let route = '<?php echo $this->url('noteLink/group', ['category' => $category, 'type' => $type]) ?>' + '?id=' + ids;
  let xhttp = new XMLHttpRequest();
  xhttp.open("DELETE", route, true);
  xhttp.onreadystatechange = function() {
    if (xhttp.status == 401) location.href = '<?php echo $this->url('user/expired')?>';
    if (xhttp.readyState == 4 && xhttp.status == 200) {
      $('#note-update-panel').html(xhttp.responseText);
    }
  };
  xhttp.send();
}

function getGroup(ids) {    
  let route = '<?php echo $this->url('noteLink/group', ['category' => $category, 'type' => $type]) ?>' + '?id=' + ids;
  let xhttp = new XMLHttpRequest();
  xhttp.open("GET", route, true);
  xhttp.onreadystatechange = function() {
    if (xhttp.status == 401) location.href = '<?php echo $this->url('user/expired')?>';
    if (xhttp.readyState == 4 && xhttp.status == 200) {
      $('#note-update-panel').html(xhttp.responseText);

      $('.group-panel').hide();
      $('#group-update-tab').addClass('active');
      $('#group-update-panel').show();
    
      $('#group-update-tab').click(function () {
        $('.group-tab').removeClass('active');
        $('#group-update-tab').addClass('active');
        $('.group-panel').hide();
        $('#group-update-panel').show();
      });
      
      $('#group-delete-tab').click(function () {
        $('.group-tab').removeClass('active');
        $('#group-delete-tab').addClass('active');
        $('.group-panel').hide();
        $('#group-delete-panel').show();
      });

      $('.noteLink-group').change(function () {
        let id = $(this).attr('id').split('-')[1];
        $('#noteLinkCheck-' + id).prop('checked', true);
      });
      
      $('#group-update-button').click(function () {
          updateGroup(ids);
      });
      
      $('#group-delete-button').click(function () {
        $(this).removeClass('btn-warning').addClass('btn-danger');
        $('#group-delete-button').click(function () {
          $(this).addClass('disabled');
          deleteGroup(ids);
        });
      });
    }
  };
  xhttp.send();
}

function postNoteLinkUpdate(id, panel) {
  var form = document.getElementById('note-evaluation-form');
  form.onsubmit = function(event) {
    event.preventDefault();
    let xhttp = new XMLHttpRequest(), route = '<?php echo $this->url('noteLink/update') ?>/' + id;
    let formData = new FormData();
    formData.append('date', encodeDate($('#date').val()));
    formData.append('mention', $('#mention').val());
    formData.append('assessment', $('#assessment').val());
    formData.append('teacher_id', $('#teacher_id').val());
    formData.append('specific_weight', $('#specific_weight').val());
    formData.append('value', $('#value').val());
  
    xhttp.open('POST', route, true);
    xhttp.onreadystatechange = function() {
      if (xhttp.status == 401) location.href = '<?php echo $this->url('user/expired')?>';
      if (xhttp.readyState == 4) {
        if (xhttp.status == 200) {
          $('#' + panel).html(xhttp.responseText);
        }
        else {
          toastr.error("<?php echo $this->translate('A technical error has occured. PLease try again later', 'ppit-core', $context->getLocale()) ?>");
        }
      }
    }
    xhttp.send(formData);
  }
}

function deleteNoteLinkUpdate(id, panel) {
    let xhttp = new XMLHttpRequest(), route = '<?php echo $this->url('noteLink/update') ?>/' + id;
  
    xhttp.open('DELETE', route, true);
    xhttp.onreadystatechange = function() {
      if (xhttp.status == 401) location.href = '<?php echo $this->url('user/expired')?>';
      if (xhttp.readyState == 4) {
        if (xhttp.status == 200) {
          $('#' + panel).html(xhttp.responseText);
        }
        else {
          toastr.error("<?php echo $this->translate('A technical error has occured. PLease try again later', 'ppit-core', $context->getLocale()) ?>");
        }
      }
    }
    xhttp.send();
}

function getNoteLinkUpdate(id, panel) {
  let xhttp = new XMLHttpRequest(), route = '<?php echo $this->url('noteLink/update') ?>/' + id;

  xhttp.open('GET', route, true);
  xhttp.onreadystatechange = function() {
    if (xhttp.status == 401) location.href = '<?php echo $this->url('user/expired')?>';
    if (xhttp.readyState == 4) {
      if (xhttp.status == 200) {
        $('#' + panel).html(xhttp.responseText);
        $('#date').datepicker(); 
        $('.noteLink_update_submit_button').click(function () { 
          postNoteLinkUpdate(id, panel);
        });

        $('.noteLink_update_delete_confirmation').hide();
        $('.noteLink_update_delete_button').click(function () { 
          $('.noteLink_update_delete_confirmation').show();
          $('.noteLink_update_delete_button').removeClass('btn-outline-primary').addClass('btn-danger').unbind();
	      $('.noteLink_update_delete_button').click(function () { 
	        deleteNoteLinkUpdate(id, panel);
	      });
        });
      }
      else {
        toastr.error("<?php echo $this->translate('A technical error has occured. PLease try again later', 'ppit-core', $context->getLocale()) ?>");
      }
    }
  }
  xhttp.send();
}
 
// Load the list
function getNoteLinkList(params) {		
  let route = '<?php echo $this->url('noteLink/list', ['category' => $category, 'type' => $type]) ?>' + params + '&order=' + ((dir =='ASC') ? '' : '-') + criterion +  '&limit=' + $('#limit').val();
  let xhttp = new XMLHttpRequest();
  xhttp.open("GET", route, true);
  xhttp.onreadystatechange = function() {
  if (xhttp.status == 401) location.href = '<?php echo $this->url('user/expired')?>';
    if (xhttp.readyState == 4 && xhttp.status == 200) {
      $('#noteLink-list-panel').html(xhttp.responseText);
      $('#more-anchor').click(function () { 
        $('#limit').val(null); 
        getNoteLinkList(getSearchParams(''));
      });

      $('#export-button').click(function () { exportNoteLinkList(); });

      $('.to-mask').hide();
			
      // Connect the sort anchors
      $('.sort_anchor').click(function () {
        criterion = $(this).attr('id').split('-')[0];
        descCriterion = $('.sort_anchor_down').attr('id');
        ascCriterion = $('.sort_anchor_up').attr('id');
        if (criterion + '-anchor' == ascCriterion) dir = 'DESC';
        else if (criterion + '-anchor' == descCriterion) dir = 'ASC';
        else dir = 'ASC';
		getNoteLinkList(getSearchParams(''));
      });
      
      // Connect the detail anchors
      $('.noteLink-detail-anchor').click(function () {
        var id = $(this).attr('id').split('_')[1];
<?php if ($category == 'homework') : ?>
        getNoteUpdate(id);
<?php elseif ($category == 'evaluation') : ?>
console.log(id);
        if ('<?php echo $type ?>' == 'note' || id == 0) {
          getNoteEvaluation('<?php echo $type ?>', $('#search-group_id').val(),  id, 'note-update-panel');
        }
        else getNoteLinkUpdate(id, 'note-update-panel');
<?php endif;?>
        $(this).removeClass("btn-outline-primary").addClass("btn-primary");
        $('#modalForm').modal('toggle');
      });

      // Able the group action button
      $('.noteLink-group-anchor').prop('disabled', true);
      $('.noteLink-checkbox').click(function () {
        $('.noteLink-group-anchor').prop('disabled', false);
      });

      // Connect the check all checkbox
      $('#noteLink-checkbox').click(function () {
        let current = $('#noteLink-checkbox').prop('checked');
        $('.noteLink-checkbox').prop('checked', (current) ? true : false);
      });
      $('#down-noteLink-checkbox').click(function () {
        let current = $('#down-noteLink-checkbox').prop('checked');
        $('.noteLink-checkbox').prop('checked', (current) ? true : false);
      });
	
      // Connect the grouped actions anchors
      $('.noteLink-group-anchor').click(function () {
        let ids = [];
        $('.noteLink-checkbox-row').each(function () {
          if ($(this).prop('checked')) {
            let id = $(this).attr('id').split('-')[1];
            if (!ids.includes(id)) ids.push(id);
          }
        });

        getGroup(ids);
        $(this).removeClass("btn-outline-primary").addClass("btn-primary");
        $('#modalForm').modal('toggle');
      });
			
      // Connect the distribution anchor
      $('.distribution').hide();
      var distributionValue = $('#select-distribution').val();
      $('#distribution_' + distributionValue).show();
      $('#select-distribution').change(function () {
        $('.distribution').hide();
        var distributionValue = $('#select-distribution').val();
        $('#distribution_' + distributionValue).show();
      });
    }
  }
  xhttp.send();
}

$('#modalForm').on('hidden.bs.modal', function (e) {
  $('.noteLink-detail-anchor').addClass("btn-outline-primary").removeClass("btn-primary");
  $('.noteLink-group-anchor').addClass("btn-outline-primary").removeClass("btn-primary");
  getNoteLinkList(getSearchParams(''));
})

function connectAuditPanel()
{
	$('#audit-panel').hide();
	$('#audit-label').click(function () {
		if ($('#audit-label').text() == '<?php echo $this->translate('Show', 'ppit-core', $context->getLocale()) ?>') {
			$('#audit-panel').show();
			$('#audit-label').text('<?php echo $this->translate('Mask', 'ppit-core', $context->getLocale()) ?>');
		}
		else {
			$('#audit-panel').hide();
			$('#audit-label').text('<?php echo $this->translate('Show', 'ppit-core', $context->getLocale()) ?>');
		}
	});
}

function connectCgvPanel()
{
	$('#cgv-panel').hide();
	$('#cgv-label').click(function () {
		if ($('#cgv-label').text() == '<?php echo $this->translate('Show', 'ppit-core', $context->getLocale()) ?>') {
			$('#cgv-panel').show();
			$('#cgv-label').text('<?php echo $this->translate('Mask', 'ppit-core', $context->getLocale()) ?>');
		}
		else {
			$('#cgv-panel').hide();
			$('#cgv-label').text('<?php echo $this->translate('Show', 'ppit-core', $context->getLocale()) ?>');
		}
	});
}

getSearch();

</script>
